---
title: "Label boxplot outliers: plot them as text labels with `geom_text_repel`."
author: "Silvie Cinkov√°"
date: 2025-08-09
echo: true
shift-heading-level-by: -1
format:
  revealjs:
    plugins: [notes]
    toc: true
    slide-number: true
    notes: true
    pdf-export: true
    css: atrium.css
    chalkboard: false
    scrollable: true
    code-block-height: 650px
    echo: true
    #output-location: slide
    preview-links: auto
  pdf:
    toc: true
    number-sections: true
    include-in-header: atrium.tex
  html:
    toc: true
    number-sections: true
    css: atrium.css
    embed-resources: true
---

## Generation of the data

This exercise is one in a series on a customized dataset originally from Gapminder.org. To make this exercise independent of local resources, I copy the data-generating script below.

The data set compiles charts of world's billionaires between 2002 and 2020. This means that the same person can occur more than one time, but their details may differ.

```{r}
library(dplyr)
library(ggplot2)
library(ggrepel)
library(readr)
```

```{r donotrunthis}
# This joins several tables from Gapminder's billionaires data set 
library(stringr, warn.conflicts = FALSE, quietly = TRUE)
billionaires_DailyIncome <- read_csv(file = "https://raw.githubusercontent.com/open-numbers/ddf--gapminder--billionaires/refs/heads/master/ddf--datapoints--daily_income--by--person--time.csv", show_col_types = FALSE)
billionaires_Persons <- read_csv(file = "https://raw.githubusercontent.com/open-numbers/ddf--gapminder--billionaires/refs/heads/master/ddf--entities--person.csv", show_col_types = TRUE, col_types = "cccccccccccccccccccc")
countries <- read_csv(file = "https://raw.githubusercontent.com/open-numbers/ddf--gapminder--billionaires/refs/heads/master/ddf--entities--geo--country.csv", show_col_types = FALSE) %>% 
  select(c("country", "name" ,"income_groups", "main_religion_2008", "world_6region", "west_and_rest"))
colnames(billionaires_DailyIncome)
colnames(billionaires_Persons)
billionaires_df <- dplyr::inner_join(x = billionaires_DailyIncome, 
                                     y = billionaires_Persons,
                                     by = "person"
                                     )  %>% 
  select(!c("image_uri", "birth", "birth_1", "birth_2", "birth_3", "names")) %>% inner_join(y = countries, by = c("countries" = "country")) %>% 
  mutate(across(c(age, starts_with("birth")), 
                  ~ str_remove_all(.x, ";.*"))) %>% 
  mutate(across(c(age, starts_with("birth")), ~ as.numeric(.x)))

  
```

## Your task: identify the richest Africans

Filter the data for billionaires from the Middle East North Africa in 2020. Plot them with a boxplot. Add a `geom_text` (or a `geom_text_repel` from the `ggrepel` package) and display the names of the billionaires who are outliers (only the upper ones, that is just outliers who earn more than the [sum of the third quartile and 1.5 IQR](#0) of the daily income). For displaying the names, use the column `person` . You can either display the names along the points generated by `geom_boxplot`, or you can hide the points with `outliers = FALSE`.

### Prepare your data frame before plotting.

-   do the filtering

-   mutate four new columns: `Q3` (third quartile), `IQR_col` (IQR), `outliers_above` (the calculation using the previous two columns), and a logical column called `is_outlier`, where you test whether the given person's daily income is higher than the corresponding value of `outliers_above`. Call the resulting data frame `billionaires_outliers`.

```{r}
#| echo: false
#billionaires_df <- read_tsv("../datasets_ATRIUM/billionaires_combined.tsv")
billionaires_2020 <- billionaires_df %>% 
  filter(time == 2020, world_6region == "middle_east_north_africa") %>% select(daily_income, person, world_6region)
billionaires_outliers <- billionaires_2020 %>% 
  mutate(Q3 = quantile(daily_income, 0.75), IQR_col = IQR(daily_income), outliers_above = Q3 + 1.5 * IQR_col) %>%
  mutate(is_outlier = if_else(condition = daily_income > outliers_above,
                              true = TRUE, 
                              false = FALSE
                              )) %>% arrange(desc(daily_income))
```

The result is supposed to look like this:

```{r}
slice_head(billionaires_outliers, n = 5)
```

### Plot the data

The easiest way to plot the outliers as labels is to save them in a separate data frame and use that subset data frame as data in `geom_text` or `geom_text_repel`.You can call this dataset `outliers_only`.

```{r}
outliers_only <- billionaires_outliers %>% filter(is_outlier == TRUE)
```

```{r}
#| echo: false
p <- ggplot() + geom_boxplot(data = billionaires_outliers,
                          mapping = aes(y = daily_income, x = 1),
                         color = "purple", outlier.shape = "." )  +
    geom_text_repel(mapping = aes(y = daily_income, 
                                  x = 1,
                                  label = person,
                            size = daily_income
                            ), 
                    data = outliers_only,
              max.overlaps = 100,  force = 7,
              alpha = 0.7,
              segment.alpha = 0.2,
              segment.size = 0.1
                ) + 
    scale_x_continuous(breaks = NULL, name = "Middle East-North Africa")
p
    
```
